// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: StageData.proto

#include "StageData.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
extern PROTOBUF_INTERNAL_EXPORT_StageData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WholeStageData_MapLine_StageData_2eproto;
extern PROTOBUF_INTERNAL_EXPORT_StageData_2eproto ::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WholeStageData_Monster_StageData_2eproto;
class WholeStageData_MapLineDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WholeStageData_MapLine> _instance;
} _WholeStageData_MapLine_default_instance_;
class WholeStageData_MonsterDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WholeStageData_Monster> _instance;
} _WholeStageData_Monster_default_instance_;
class WholeStageDataDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<WholeStageData> _instance;
} _WholeStageData_default_instance_;
static void InitDefaultsscc_info_WholeStageData_StageData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WholeStageData_default_instance_;
    new (ptr) ::WholeStageData();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WholeStageData::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<2> scc_info_WholeStageData_StageData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 2, InitDefaultsscc_info_WholeStageData_StageData_2eproto}, {
      &scc_info_WholeStageData_MapLine_StageData_2eproto.base,
      &scc_info_WholeStageData_Monster_StageData_2eproto.base,}};

static void InitDefaultsscc_info_WholeStageData_MapLine_StageData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WholeStageData_MapLine_default_instance_;
    new (ptr) ::WholeStageData_MapLine();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WholeStageData_MapLine::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WholeStageData_MapLine_StageData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_WholeStageData_MapLine_StageData_2eproto}, {}};

static void InitDefaultsscc_info_WholeStageData_Monster_StageData_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::_WholeStageData_Monster_default_instance_;
    new (ptr) ::WholeStageData_Monster();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::WholeStageData_Monster::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_WholeStageData_Monster_StageData_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, InitDefaultsscc_info_WholeStageData_Monster_StageData_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_StageData_2eproto[3];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_StageData_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_StageData_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_StageData_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WholeStageData_MapLine, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WholeStageData_MapLine, block_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WholeStageData_Monster, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WholeStageData_Monster, type_),
  PROTOBUF_FIELD_OFFSET(::WholeStageData_Monster, startxpos_),
  PROTOBUF_FIELD_OFFSET(::WholeStageData_Monster, startypos_),
  PROTOBUF_FIELD_OFFSET(::WholeStageData_Monster, commands_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::WholeStageData, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::WholeStageData, stage_level_),
  PROTOBUF_FIELD_OFFSET(::WholeStageData, map_),
  PROTOBUF_FIELD_OFFSET(::WholeStageData, monsters_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::WholeStageData_MapLine)},
  { 6, -1, sizeof(::WholeStageData_Monster)},
  { 15, -1, sizeof(::WholeStageData)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WholeStageData_MapLine_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WholeStageData_Monster_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::_WholeStageData_default_instance_),
};

const char descriptor_table_protodef_StageData_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\017StageData.proto\"\341\001\n\016WholeStageData\022\023\n\013"
  "stage_level\030\001 \001(\005\022$\n\003Map\030\002 \003(\0132\027.WholeSt"
  "ageData.MapLine\022)\n\010Monsters\030\t \003(\0132\027.Whol"
  "eStageData.Monster\032\030\n\007MapLine\022\r\n\005block\030\001"
  " \003(\005\032O\n\007Monster\022\014\n\004Type\030\005 \001(\005\022\021\n\tstartXP"
  "os\030\006 \001(\005\022\021\n\tstartYPos\030\007 \001(\005\022\020\n\010Commands\030"
  "\010 \003(\005b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_StageData_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_StageData_2eproto_sccs[3] = {
  &scc_info_WholeStageData_StageData_2eproto.base,
  &scc_info_WholeStageData_MapLine_StageData_2eproto.base,
  &scc_info_WholeStageData_Monster_StageData_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_StageData_2eproto_once;
static bool descriptor_table_StageData_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_StageData_2eproto = {
  &descriptor_table_StageData_2eproto_initialized, descriptor_table_protodef_StageData_2eproto, "StageData.proto", 253,
  &descriptor_table_StageData_2eproto_once, descriptor_table_StageData_2eproto_sccs, descriptor_table_StageData_2eproto_deps, 3, 0,
  schemas, file_default_instances, TableStruct_StageData_2eproto::offsets,
  file_level_metadata_StageData_2eproto, 3, file_level_enum_descriptors_StageData_2eproto, file_level_service_descriptors_StageData_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_StageData_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_StageData_2eproto), true);

// ===================================================================

void WholeStageData_MapLine::InitAsDefaultInstance() {
}
class WholeStageData_MapLine::_Internal {
 public:
};

WholeStageData_MapLine::WholeStageData_MapLine()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WholeStageData.MapLine)
}
WholeStageData_MapLine::WholeStageData_MapLine(const WholeStageData_MapLine& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      block_(from.block_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:WholeStageData.MapLine)
}

void WholeStageData_MapLine::SharedCtor() {
}

WholeStageData_MapLine::~WholeStageData_MapLine() {
  // @@protoc_insertion_point(destructor:WholeStageData.MapLine)
  SharedDtor();
}

void WholeStageData_MapLine::SharedDtor() {
}

void WholeStageData_MapLine::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WholeStageData_MapLine& WholeStageData_MapLine::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WholeStageData_MapLine_StageData_2eproto.base);
  return *internal_default_instance();
}


void WholeStageData_MapLine::Clear() {
// @@protoc_insertion_point(message_clear_start:WholeStageData.MapLine)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  block_.Clear();
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WholeStageData_MapLine::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated int32 block = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(mutable_block(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8) {
          add_block(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WholeStageData_MapLine::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:WholeStageData.MapLine)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 block = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (10 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_block())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 1, 10u, input, this->mutable_block())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WholeStageData.MapLine)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WholeStageData.MapLine)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WholeStageData_MapLine::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WholeStageData.MapLine)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 block = 1;
  if (this->block_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(1, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_block_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->block_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32NoTag(
      this->block(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WholeStageData.MapLine)
}

::PROTOBUF_NAMESPACE_ID::uint8* WholeStageData_MapLine::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WholeStageData.MapLine)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated int32 block = 1;
  if (this->block_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      1,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _block_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->block_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WholeStageData.MapLine)
  return target;
}

size_t WholeStageData_MapLine::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WholeStageData.MapLine)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 block = 1;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->block_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _block_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WholeStageData_MapLine::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WholeStageData.MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  const WholeStageData_MapLine* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WholeStageData_MapLine>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WholeStageData.MapLine)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WholeStageData.MapLine)
    MergeFrom(*source);
  }
}

void WholeStageData_MapLine::MergeFrom(const WholeStageData_MapLine& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WholeStageData.MapLine)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  block_.MergeFrom(from.block_);
}

void WholeStageData_MapLine::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WholeStageData.MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WholeStageData_MapLine::CopyFrom(const WholeStageData_MapLine& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WholeStageData.MapLine)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WholeStageData_MapLine::IsInitialized() const {
  return true;
}

void WholeStageData_MapLine::InternalSwap(WholeStageData_MapLine* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  block_.InternalSwap(&other->block_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WholeStageData_MapLine::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WholeStageData_Monster::InitAsDefaultInstance() {
}
class WholeStageData_Monster::_Internal {
 public:
};

WholeStageData_Monster::WholeStageData_Monster()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WholeStageData.Monster)
}
WholeStageData_Monster::WholeStageData_Monster(const WholeStageData_Monster& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      commands_(from.commands_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&startypos_, &from.startypos_,
    static_cast<size_t>(reinterpret_cast<char*>(&startxpos_) -
    reinterpret_cast<char*>(&startypos_)) + sizeof(startxpos_));
  // @@protoc_insertion_point(copy_constructor:WholeStageData.Monster)
}

void WholeStageData_Monster::SharedCtor() {
  ::memset(&startypos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&startxpos_) -
      reinterpret_cast<char*>(&startypos_)) + sizeof(startxpos_));
}

WholeStageData_Monster::~WholeStageData_Monster() {
  // @@protoc_insertion_point(destructor:WholeStageData.Monster)
  SharedDtor();
}

void WholeStageData_Monster::SharedDtor() {
}

void WholeStageData_Monster::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WholeStageData_Monster& WholeStageData_Monster::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WholeStageData_Monster_StageData_2eproto.base);
  return *internal_default_instance();
}


void WholeStageData_Monster::Clear() {
// @@protoc_insertion_point(message_clear_start:WholeStageData.Monster)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  commands_.Clear();
  ::memset(&startypos_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&startxpos_) -
      reinterpret_cast<char*>(&startypos_)) + sizeof(startxpos_));
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WholeStageData_Monster::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 Type = 5;
      case 5:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 40)) {
          type_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startXPos = 6;
      case 6:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 48)) {
          startxpos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // int32 startYPos = 7;
      case 7:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 56)) {
          startypos_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated int32 Commands = 8;
      case 8:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 66)) {
          ptr = ::PROTOBUF_NAMESPACE_ID::internal::PackedInt32Parser(mutable_commands(), ptr, ctx);
          CHK_(ptr);
        } else if (static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 64) {
          add_commands(::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr));
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WholeStageData_Monster::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:WholeStageData.Monster)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 Type = 5;
      case 5: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (40 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 startXPos = 6;
      case 6: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (48 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &startxpos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 startYPos = 7;
      case 7: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (56 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &startypos_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated int32 Commands = 8;
      case 8: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (66 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPackedPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_commands())));
        } else if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (64 & 0xFF)) {
          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 1, 66u, input, this->mutable_commands())));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WholeStageData.Monster)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WholeStageData.Monster)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WholeStageData_Monster::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WholeStageData.Monster)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 5;
  if (this->type() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(5, this->type(), output);
  }

  // int32 startXPos = 6;
  if (this->startxpos() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(6, this->startxpos(), output);
  }

  // int32 startYPos = 7;
  if (this->startypos() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(7, this->startypos(), output);
  }

  // repeated int32 Commands = 8;
  if (this->commands_size() > 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTag(8, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
    output->WriteVarint32(_commands_cached_byte_size_.load(
        std::memory_order_relaxed));
  }
  for (int i = 0, n = this->commands_size(); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32NoTag(
      this->commands(i), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WholeStageData.Monster)
}

::PROTOBUF_NAMESPACE_ID::uint8* WholeStageData_Monster::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WholeStageData.Monster)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 Type = 5;
  if (this->type() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(5, this->type(), target);
  }

  // int32 startXPos = 6;
  if (this->startxpos() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(6, this->startxpos(), target);
  }

  // int32 startYPos = 7;
  if (this->startypos() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(7, this->startypos(), target);
  }

  // repeated int32 Commands = 8;
  if (this->commands_size() > 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteTagToArray(
      8,
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED,
      target);
    target = ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream::WriteVarint32ToArray(
        _commands_cached_byte_size_.load(std::memory_order_relaxed),
         target);
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      WriteInt32NoTagToArray(this->commands_, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WholeStageData.Monster)
  return target;
}

size_t WholeStageData_Monster::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WholeStageData.Monster)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated int32 Commands = 8;
  {
    size_t data_size = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      Int32Size(this->commands_);
    if (data_size > 0) {
      total_size += 1 +
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
            static_cast<::PROTOBUF_NAMESPACE_ID::int32>(data_size));
    }
    int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(data_size);
    _commands_cached_byte_size_.store(cached_size,
                                    std::memory_order_relaxed);
    total_size += data_size;
  }

  // int32 startYPos = 7;
  if (this->startypos() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->startypos());
  }

  // int32 Type = 5;
  if (this->type() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->type());
  }

  // int32 startXPos = 6;
  if (this->startxpos() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->startxpos());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WholeStageData_Monster::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WholeStageData.Monster)
  GOOGLE_DCHECK_NE(&from, this);
  const WholeStageData_Monster* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WholeStageData_Monster>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WholeStageData.Monster)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WholeStageData.Monster)
    MergeFrom(*source);
  }
}

void WholeStageData_Monster::MergeFrom(const WholeStageData_Monster& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WholeStageData.Monster)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  commands_.MergeFrom(from.commands_);
  if (from.startypos() != 0) {
    set_startypos(from.startypos());
  }
  if (from.type() != 0) {
    set_type(from.type());
  }
  if (from.startxpos() != 0) {
    set_startxpos(from.startxpos());
  }
}

void WholeStageData_Monster::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WholeStageData.Monster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WholeStageData_Monster::CopyFrom(const WholeStageData_Monster& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WholeStageData.Monster)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WholeStageData_Monster::IsInitialized() const {
  return true;
}

void WholeStageData_Monster::InternalSwap(WholeStageData_Monster* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  commands_.InternalSwap(&other->commands_);
  swap(startypos_, other->startypos_);
  swap(type_, other->type_);
  swap(startxpos_, other->startxpos_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WholeStageData_Monster::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void WholeStageData::InitAsDefaultInstance() {
}
class WholeStageData::_Internal {
 public:
};

WholeStageData::WholeStageData()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:WholeStageData)
}
WholeStageData::WholeStageData(const WholeStageData& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      map_(from.map_),
      monsters_(from.monsters_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  stage_level_ = from.stage_level_;
  // @@protoc_insertion_point(copy_constructor:WholeStageData)
}

void WholeStageData::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_WholeStageData_StageData_2eproto.base);
  stage_level_ = 0;
}

WholeStageData::~WholeStageData() {
  // @@protoc_insertion_point(destructor:WholeStageData)
  SharedDtor();
}

void WholeStageData::SharedDtor() {
}

void WholeStageData::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const WholeStageData& WholeStageData::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_WholeStageData_StageData_2eproto.base);
  return *internal_default_instance();
}


void WholeStageData::Clear() {
// @@protoc_insertion_point(message_clear_start:WholeStageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  map_.Clear();
  monsters_.Clear();
  stage_level_ = 0;
  _internal_metadata_.Clear();
}

#if GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
const char* WholeStageData::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // int32 stage_level = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 8)) {
          stage_level_ = ::PROTOBUF_NAMESPACE_ID::internal::ReadVarint(&ptr);
          CHK_(ptr);
        } else goto handle_unusual;
        continue;
      // repeated .WholeStageData.MapLine Map = 2;
      case 2:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 18)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_map(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 18);
        } else goto handle_unusual;
        continue;
      // repeated .WholeStageData.Monster Monsters = 9;
      case 9:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 74)) {
          ptr -= 1;
          do {
            ptr += 1;
            ptr = ctx->ParseMessage(add_monsters(), ptr);
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::UnalignedLoad<::PROTOBUF_NAMESPACE_ID::uint8>(ptr) == 74);
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}
#else  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER
bool WholeStageData::MergePartialFromCodedStream(
    ::PROTOBUF_NAMESPACE_ID::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!PROTOBUF_PREDICT_TRUE(EXPRESSION)) goto failure
  ::PROTOBUF_NAMESPACE_ID::uint32 tag;
  // @@protoc_insertion_point(parse_start:WholeStageData)
  for (;;) {
    ::std::pair<::PROTOBUF_NAMESPACE_ID::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 stage_level = 1;
      case 1: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (8 & 0xFF)) {

          DO_((::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadPrimitive<
                   ::PROTOBUF_NAMESPACE_ID::int32, ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::TYPE_INT32>(
                 input, &stage_level_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WholeStageData.MapLine Map = 2;
      case 2: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (18 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_map()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .WholeStageData.Monster Monsters = 9;
      case 9: {
        if (static_cast< ::PROTOBUF_NAMESPACE_ID::uint8>(tag) == (74 & 0xFF)) {
          DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::ReadMessage(
                input, add_monsters()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:WholeStageData)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:WholeStageData)
  return false;
#undef DO_
}
#endif  // GOOGLE_PROTOBUF_ENABLE_EXPERIMENTAL_PARSER

void WholeStageData::SerializeWithCachedSizes(
    ::PROTOBUF_NAMESPACE_ID::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:WholeStageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stage_level = 1;
  if (this->stage_level() != 0) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32(1, this->stage_level(), output);
  }

  // repeated .WholeStageData.MapLine Map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->map_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      2,
      this->map(static_cast<int>(i)),
      output);
  }

  // repeated .WholeStageData.Monster Monsters = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monsters_size()); i < n; i++) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteMessageMaybeToArray(
      9,
      this->monsters(static_cast<int>(i)),
      output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFields(
        _internal_metadata_.unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:WholeStageData)
}

::PROTOBUF_NAMESPACE_ID::uint8* WholeStageData::InternalSerializeWithCachedSizesToArray(
    ::PROTOBUF_NAMESPACE_ID::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:WholeStageData)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 stage_level = 1;
  if (this->stage_level() != 0) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::WriteInt32ToArray(1, this->stage_level(), target);
  }

  // repeated .WholeStageData.MapLine Map = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->map_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->map(static_cast<int>(i)), target);
  }

  // repeated .WholeStageData.Monster Monsters = 9;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->monsters_size()); i < n; i++) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::
      InternalWriteMessageToArray(
        9, this->monsters(static_cast<int>(i)), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::SerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:WholeStageData)
  return target;
}

size_t WholeStageData::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:WholeStageData)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::ComputeUnknownFieldsSize(
        _internal_metadata_.unknown_fields());
  }
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated .WholeStageData.MapLine Map = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->map_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->map(static_cast<int>(i)));
    }
  }

  // repeated .WholeStageData.Monster Monsters = 9;
  {
    unsigned int count = static_cast<unsigned int>(this->monsters_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::MessageSize(
          this->monsters(static_cast<int>(i)));
    }
  }

  // int32 stage_level = 1;
  if (this->stage_level() != 0) {
    total_size += 1 +
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::Int32Size(
        this->stage_level());
  }

  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void WholeStageData::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:WholeStageData)
  GOOGLE_DCHECK_NE(&from, this);
  const WholeStageData* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<WholeStageData>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:WholeStageData)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:WholeStageData)
    MergeFrom(*source);
  }
}

void WholeStageData::MergeFrom(const WholeStageData& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:WholeStageData)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  map_.MergeFrom(from.map_);
  monsters_.MergeFrom(from.monsters_);
  if (from.stage_level() != 0) {
    set_stage_level(from.stage_level());
  }
}

void WholeStageData::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:WholeStageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void WholeStageData::CopyFrom(const WholeStageData& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:WholeStageData)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool WholeStageData::IsInitialized() const {
  return true;
}

void WholeStageData::InternalSwap(WholeStageData* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  CastToBase(&map_)->InternalSwap(CastToBase(&other->map_));
  CastToBase(&monsters_)->InternalSwap(CastToBase(&other->monsters_));
  swap(stage_level_, other->stage_level_);
}

::PROTOBUF_NAMESPACE_ID::Metadata WholeStageData::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::WholeStageData_MapLine* Arena::CreateMaybeMessage< ::WholeStageData_MapLine >(Arena* arena) {
  return Arena::CreateInternal< ::WholeStageData_MapLine >(arena);
}
template<> PROTOBUF_NOINLINE ::WholeStageData_Monster* Arena::CreateMaybeMessage< ::WholeStageData_Monster >(Arena* arena) {
  return Arena::CreateInternal< ::WholeStageData_Monster >(arena);
}
template<> PROTOBUF_NOINLINE ::WholeStageData* Arena::CreateMaybeMessage< ::WholeStageData >(Arena* arena) {
  return Arena::CreateInternal< ::WholeStageData >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
